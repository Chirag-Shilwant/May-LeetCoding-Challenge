/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
static const auto _____ = []()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    return 0;
}();
class Solution {
public:
    stack<TreeNode*>S;
    int inorder(TreeNode* root,int k)
    {   
        TreeNode* curr=root;
        while(curr!=NULL || !S.empty()){
            
            while(curr!=NULL)
            {
                S.push(curr);
                curr=curr->left;
            }
            curr=S.top();
         if(--k==0)  return curr->val;  
          S.pop();
          curr=curr->right;
       }
        return NULL;
    }
    int kthSmallest(TreeNode* root, int k) {
         return inorder(root,k);
        
    }
};
